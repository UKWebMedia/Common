<?php
namespace Versionable\Tests\Common\Collection;

use Versionable\Common\Collection\Set;

use Versionable\Common\Collection\HashSet;

/**
 * Test class for Set.
 * Generated by PHPUnit on 2011-01-14 at 10:32:17.
 */
class SetTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Set
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = $this->getMockForAbstractClass('\\Versionable\\Common\\Collection\\Set');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    public function testAdd()
    {
      $this->object->add(1);
    }


    public function testAddNoDuplicates() {
      $this->setExpectedException('\\InvalidArgumentException');
      $this->object->add(100);
      $this->object->add(100);
    }
   
    public function testAddAll()
    {
      $set = new Set();
      $set->add(100);
      $set->add(200);
      $set->add(300);

      $this->object->addAll($set);

      $elements = $this->readAttribute($this->object, 'elements');
      $this->assertEquals(array(100,200,300), $elements);
    }

    public function testAddAllNoDuplicates() 
    {
      $this->setExpectedException('\\InvalidArgumentException');

      $this->object->add(100);

      $set = new Set();
      $set->add(100);
      $set->add(200);
      $set->add(300);

      $this->object->addAll($set);
    }
    
    public function testSerialize()
    {
      $this->object->add(100);
      $this->object->add(200);
      
      $this->assertEquals(serialize($this->readAttribute($this->object, 'elements')), $this->object->serialize());
    }
    
    public function testUnserialize()
    {
      $elements = array(100, 200);
      
      $this->object->unserialize(serialize($elements));
      
      $this->assertEquals($elements, $this->readAttribute($this->object, 'elements'));
    }
    
    public function testUnserializeInvalid()
    {
      $this->setExpectedException('\\InvalidArgumentException');
      
      $this->object->unserialize('invalid');
    }
}